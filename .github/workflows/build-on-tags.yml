name: Build and push tagged (released) images

on:
  release:
    types:
      - published
  push:
    tags:
      # - 'v*.*.*'
      - '*'

permissions:
  contents: write # push to pages
  packages: write # GHCR

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        proto:
          - cloak
          - shadowsocks
          - wireguard
          - amnezia-wireguard
          - openvpn
          - openvpn-tlscrypt
          - anyconnect
    steps:

    - id: fixes
      uses: actions/github-script@v7
      with:
        script: |
          core.setOutput('owner', '${{ github.repository_owner }}'.toLowerCase());

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DKRUSR }}
        password: ${{ secrets.DKRTKN }}

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHTKN }}

    - name: Create VERSION file
      run: echo -n "${{ github.ref_name }}" > VERSION

    - name: Build Containers and push them to registries (GHCR & DockerHub)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./protos/${{ matrix.proto }}/Dockerfile
        platforms: |
          linux/amd64
          linux/arm/v7
          linux/arm64/v8
          linux/386
          linux/ppc64le
        # linux/riscv64
        # ☝️  Will be available after alpine 3.20 release
        # what about mips?
        tags: |
          ghcr.io/${{ steps.fixes.outputs.owner }}/node-${{ matrix.proto }}:${{ github.ref_name }}
          ghcr.io/${{ steps.fixes.outputs.owner }}/node-${{ matrix.proto }}:latest
          ${{ steps.fixes.outputs.owner }}/node-${{ matrix.proto }}:${{ github.ref_name }}
          ${{ steps.fixes.outputs.owner }}/node-${{ matrix.proto }}:latest
        push: true

  push-new-version-to-pages:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:

    - name: Check out gh-pages branch (to mark new version as ready)
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages
        fetch-depth: 0

    - name: Mark new version
      run: echo -n "${{ github.ref_name }}" > gh-pages/VERSION

    - name: Commit and push new version
      run: |
        cd "${{ github.workspace }}/gh-pages"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .
        git commit --allow-empty-message --amend -m ''

    - name: Force push to destination branch
      uses: ad-m/github-push-action@v0.8.0
      with:
        branch: gh-pages
        force: true
        directory: "${{ github.workspace }}/gh-pages"
